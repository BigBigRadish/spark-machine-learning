spark 文本处理技术
task：
数据处理，特征提取，数据处理的例子
比较两个文档的相似性
将提取的文本特征作为分类模型的输入
使用Spark Word2Vec根据语义比较单词相似性
文本数据处理的复杂性：
一：文本和语言有隐含的结构信息，使用原始文本很难捕捉到。单纯的特征提取没有多大效果
二：文本数据的有效维度都非常巨大，甚至无限大。
为了应对以上两个问题，我们需要提取更多的结构特征，并需要一种处理极大维度文本数据的方法。
TF-IDF：相比于在一个文档中出现次数少的单词，出现次数更多的单词应该有更大的权重。而IDF归一化起到了减少在所有文档中总是出现的单词的权重的作用。
最后的结果就是，稀有的或者更少的单词被给予了更高的权重，常用单词就只有较小的影响。
特征散列：
特征散列通过使用散列函数对特征赋予下标，这种编码的工作方式和基于映射编码一样，只不过需要预先选择特征向量的大小。
特征散列两个缺陷：
因为没有创建特征到下标的映射，也就不能逆向转换把下标作为特征。有可能会出现散列冲突。